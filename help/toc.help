=======
(ABORT")                                                                       
Runtime for ABORT"

=======
+LOOP   ct: dest -1  rt: n --  r: limit index --  | limit index+n              
@see anscore

=======
."                                                                             
@see anscore

=======
1CHARS/   n1 -- n2                          INTERNAL                           
Convert address units to chars

=======
?DO   ct: -- dest -1  rt: end start -- r: -- start end                         
@see anscore

=======
ABORT   i*x --  r: j*x --                                                      
before ANS descritpion
@see anscore
after ANS description

=======
ABORT"                                                                         
@see anscore

=======
AGAIN   dest -1 --                                                             
@see anscore

=======
AHEAD   -- orig 1                                                              
@see anscore

=======
BEGIN   -- dest -1                                                             
@see anscore

=======
C,   c --                                   CORE                               
reserve one char in data space and store x in it

=======
CHARS   n1 -- n2                                                               
@see anscore

=======
COMPILE-ONLY   --                           INTERNAL                           
Make last definition a compile-only word

=======
CONSTANT   x "<spaces>name" --  rt: -- x                                       
@see anscore

=======
DECIMAL   --                                CORE                               
Set the numeric conversion radix to ten (decimal).  

=======
DO   ct: -- dest -1  rt: end start -- r: -- start end                          
@see anscore

=======
DOS"   -- c-addr u                          INTERNAL                           
Runtime for s" 

=======
ELSE   orig1 1 -- orig2 1                                                      
@see anscore

=======
EXCEPTIONS                                                                     
Throw code if flag is true

=======
FOR   ct: -- dest -1  rt: count -- r: u1 u1                                    
Start for-next loop, will iterate count+1 times

=======
FORALL   "list" "word" -- , azucar para foreach                                
Syntactic sugar for FOREACH

=======
FOREACH   xt list --                                                           
Apply xt to each element in list

=======
IF   -- orig 1                                                                 
@see anscore

=======
LEAVE   r: limit index --                                                      
@see anscore

=======
LINK   item list --                         INTERNAL                           
Link item to list

=======
LINKED   list -- , enlaza here a la lista                                      
Allocate space for a link field and link it to list

=======
LOOP   ct: dest -1  rt:  --  r: limit index --  | limit index+1                
@see anscore

=======
NESTING?   --                               INTERNAL                           
Check for compiler nesting

=======
NEXT   ct: dest -1  rt: initial index --  | initial index-1                    
Terminate for-next loop

=======
RECURSE   ct: --                                                               
@see anscore

=======
REPEAT   orig 1 dest -1 --                                                     
@see anscore

=======
S"                                                                             
@see anscore

=======
THEN   orig 1 --                                                               
@see anscore

=======
U.   u --                                   CORE                               
Display u in free field format.

=======
UNTIL   dest -1 --                                                             
@see anscore

=======
VALUE   x "name" -- rt: -- x                                                   
@see anscore

=======
VARIABLE   "<spaces>name" --                                                   
@see anscore

=======
WHILE   dest -1 -- orig 1 dest -1                                              
@see anscore

=======
[']   "  xxx"" --  rt: -- xt                                                   
@see anscore

